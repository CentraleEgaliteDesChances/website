<?php

namespace CEC\ActiviteBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Document
 *
 * Un document représente une paire de fichiers enregistrés sur le serveur
 * et associée à une activité. Il s'agit d'une version du contenu de l'activité, 
 * en deux formats : le format PDF permettant un téléchargement et une compatibilité
 * étendue, et le format Microsoft Word, permettant l'édition de l'activité si nécessaire
 * (comme par exemple si des corrections sont demandées dans un compte-rendu de l'activité).
 *
 * La classe gère la gestion des fichiers sur le serveur, et, si nécessaire et disponible,
 * la conversion au format PDF grâce au site tierce http://www.conv2pdf.com.
 * On notera donc que pour créer un nouveau document, il suffit de fournir un fichier Word.
 *
 *
 * @ORM\Table()
 * @ORM\Entity
 */
class Document
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * Fichier Word téléchargé.
     * Cet attribut permet de générer un champ de téléchargement de fichier dans un formulaire
     * lors de la création du document. Il doit correspondre au fichier Word, et est donc requis.
     * Il est important de noter que seules les extensions .doc et .docx sont acceptés, et que la 
     * taille du fichier ne peut excéder 1 Mo.
     *
     * @var UploadedFile
     *
     * @Assert\File(
     *     maxSize = "1024k",
     *     maxSizeMessage = "La taille du fichier ne peut dépasser 1 Mo.",
     *     mimeTypes = { "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document" },
     *     mimeTypesMessage = "Le fichier doit être sous format Microsoft Word (.doc ou .docx)."
     * )
     * @Assert\NotBlank()
     */
    private $fichierWord;
    
    /**
     * Fichier PDF téléchargé.
     * Cet attribut permet de générer un champ de téléchargement de fichier dans un formulaire
     * lors de la création du document. Il doit correspondre au fichier PDF, et n'est donc pas requis.
     * En effet, si le service est disponible, on peut convertir le fichier Word au format PDF et l'utiliser.
     * Il est important de noter que seules l'extension .pdf est accepté, et que la 
     * taille du fichier ne peut excéder 1 Mo.
     *
     * @var UploadedFile
     *
     * @Assert\File(
     *     maxSize = "1024k",
     *     maxSizeMessage = "La taille du fichier ne peut dépasser 1 Mo.",
     *     mimeTypes = {"application/pdf", "application/x-pdf"},
     *     mimeTypesMessage = "Le fichier doit être sous format Adobe PDF (.pdf)."
     * )
     * @Assert\NotBlank()
     */
    private $fichierPDF;

    /**
     * Représente le nom du fichier PDF, avec son extension.
     * Il permet d'accéder par la suite au fichier stocké sur le serveur.
     *
     * @var string
     *
     * @ORM\Column(name="fichierPDF", type="string", length=255)
     */
    private $nomFichierPDF;

    /**
     * Représente le nom du fichier Word, avec son extension.
     * Il permet d'accéder par la suite au fichier stocké sur le serveur.
     *
     * @var string
     *
     * @ORM\Column(name="fichierWord", type="string", length=255)
     */
    private $nomFichierWord;

    /**
     * Date de création.
     *
     * @var \DateTime
     *
     * @ORM\Column(name="dateCreation", type="datetime")
     */
    private $dateCreation;

    /**
     * Date de dernière modification.
     *
     * @var \DateTime
     *
     * @ORM\Column(name="dateModification", type="datetime")
     */
    private $dateModification;
    
    /**
     * Activité associée au document. Le présent document représente donc
     * une version de l'activité et fait partie de l'historique de celle-ci.
     *
     * @var Activite
     *
     * @ORM\ManyToOne(targetEntity="Activite", inversedBy="versions")
     */
    private $activite;
    
    /**
     * Membre auteur du document. Il est enregistrer lors de l'ajout du document
     * et permet de garder une trace de l'activité du membre.
     *
     * @var CEC\MembreBundle\Entity\Membre
     *
     * @ORM\ManyToOne(targetEntity="CEC\MembreBundle\Entity\Membre", inversedBy="documents")
     */
    private $auteur;
    
    
    //
    // Doctrine-generated accessors
    //
    
}