<?php

namespace CEC\TutoratBundle\Entity;

use Doctrine\ORM\EntityRepository;
use CEC\TutoratBundle\Entity\Groupe;

/**
 * SeanceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SeanceRepository extends EntityRepository
{
    /**
     * Récupère les séances qui sont encore à venir pour un groupe.
     * On filtre les séances en ne considérant que celles qui se déroule aujourd'hui et antérieures.
     * On applique aussi un tri croissant par date de début.
     * On se limite par défaut aux 5 prochaines séances.
     *
     * @param Groupe $groupe: the groupe
     * @return ArrayCollection
     */
    public function findComingByGroupe(Groupe $groupe, $limite = 5)
    {
        $query = $this->createQueryBuilder('s')
            ->where('s.groupe = :groupe_id')
            ->setParameter('groupe_id', $groupe->getId())
            ->andWhere('s.date > :maintenant')
            ->setParameter('maintenant', new \DateTime())
            ->orderBy('s.date', 'ASC')
            ->setMaxResults($limite)
            ->getQuery();
        return $query->getResult();
    }
    
    /**
     * Récupère les séances se déroulant entre deux dates spécifiques.
     *
     * @param \DateTime $dateDebut: date de début
     * @param \DateTime $dateFin  : date de fin
     * @return ArrayCollection
     */
    public function findAllBetweenDates(\DateTime $dateDebut, \DateTime $dateFin)
    {
        $query = $this->createQueryBuilder('s')
                      ->where('s.date BETWEEN :date_debut and :date_fin')
                      ->setParameter('date_debut', $dateDebut->format('Y-m-d H:i:s'))
                      ->setParameter('date_fin', $dateFin->format('Y-m-d H:i:s'))
                      ->getQuery();
        return $query->getResult();
    }
}
